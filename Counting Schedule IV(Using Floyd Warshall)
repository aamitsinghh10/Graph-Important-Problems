class Solution {
public:
    vector<bool> checkIfPrerequisite(int numCourses, vector<vector<int>>& prerequisites, vector<vector<int>>& queries) 
    {
        vector<vector<int>>distance(numCourses,vector<int>(numCourses,1e7));
     
        for(int i=0;i<prerequisites.size();i++)
        {
            distance[prerequisites[i][0]][prerequisites[i][1]]=1;
        }
        //Using Floyd Warshall
        for(int k=0;k<numCourses;k++)
        {
            for(int i=0;i<numCourses;i++)
            {
                for(int j=0;j<numCourses;j++)
                {
                    if(distance[i][k]==1e7 || distance[k][j]==1e7)
                        continue;
                    else if(distance[i][j]> distance[i][k]+distance[k][j])
                        distance[i][j]=distance[i][k]+distance[k][j];
                        
                }
            }
        }
        vector<bool>ans;
        
        for(int i=0;i<queries.size();i++)//Check in th distance matrix
        {
            if(distance[queries[i][0]][queries[i][1]]==1e7)
                ans.push_back(false);
            else
                ans.push_back(true);
        }
        return ans;
    }
};
