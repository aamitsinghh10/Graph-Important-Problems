class Solution {
public:
    int findparent(int node,vector<int> &parent)
    {
        return parent[node]==-1?node:parent[node]=findparent(parent[node],parent);
    }
    int minSwapsCouples(vector<int>& row) 
    {
        int n=row.size();
        vector<int> parent(n,-1);
        int swaps=0;//whenever not matches(mismatches)
        
        for(int i=0;i<row.size();i+=2)
        {
            parent[row[i+1]]=row[i];//make parent of row[i+1] to row[i]
        }
        
        for(int i=0;i<row.size();i+=2)
        {
            int parentone=findparent(i,parent);
            int parenttwo=findparent(i+1,parent);
            
            if(parentone!=parenttwo)
            {
                parent[parentone]=parenttwo;//Taking union of 2 sets for swaps
                swaps++;
            }
        }
        return swaps;  
    }
};
