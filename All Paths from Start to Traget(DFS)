class Solution {
public:
    void dfs(vector<vector<int>> &graph,vector<int>& path, vector<vector<int>> &ans,int src)
    {
        path.push_back(src);
        
        if(src==graph.size()-1)
        {
            ans.push_back(path);
        }
             for(int it:graph[src])
             {
                  dfs(graph,path,ans,it); 
             }
        path.pop_back();
    }
    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph)
    {
        int n=graph.size();
        vector<int> path;
        vector<vector<int>> res;
        
        dfs(graph,path,res,0);
        
        return res;
    }
};
